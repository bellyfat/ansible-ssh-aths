#!/usr/bin/env python

'''
Example custom dynamic inventory script for Ansible, in Python.
'''

import os
import sys
import argparse

try:
    import json
except ImportError:
    import simplejson as json


parent_dir = os.path.abspath(os.path.join(__file__, os.path.pardir))
inventory_dir = os.path.join(parent_dir, "ssh-aths-inventory")

class AutoVivification(dict):
    """Implementation of perl's autovivification feature."""
    # Credit: http://stackoverflow.com/a/651879/140800
    def __getitem__(self, item):
        try:
            return dict.__getitem__(self, item)
        except KeyError:
            value = self[item] = type(self)()
            return value


class ATHSInventory(object):

    def __init__(self):
        self.inventory = {}
        self.read_cli_args()

        # Called with `--list`.
        if self.args.list:
            self.inventory = self.aths_inventory()
        # Called with `--host [hostname]`.
        elif self.args.host:
            # Not implemented, since we return _meta info `--list`.
            self.inventory = self.empty_inventory()
        # If no groups or vars are present, return an empty inventory.
        else:
            self.inventory = self.empty_inventory()

        print json.dumps(self.inventory, indent=2);

    def aths_inventory(self):
        # find local files
        # parse local files
        # build json dict
        # return
        inventory = AutoVivification()
        inventory['group']['hosts'] = []

        # Format for ATHS filename should be:
        # 'ssh-aths-inventory/hostname'
        try:
            for filename in os.listdir(inventory_dir):
                host = filename
                inventory['group']['hosts'].append(host)
                with open(os.path.join(fullpath_to_aths_dir, filename)) as f:
                    aths_info = f.readline().rstrip()
                    aths_url, hidservauth_value = aths_info.split()[1:3]

                    # format aths entry for client torrc
                    # need example
                    # HidServAuth 664uyjasn5755tm2.onion krg6isrAIAL8dayIaZqBGR # client: admin
                    import re
                    re.compile(r'')

                    inventory['_meta']['hostvars'][host]['ansible_ssh_host'] = aths_url
                    inventory['_meta']['hostvars'][host]['ansible_ssh_aths_url'] = aths_url
                    inventory['_meta']['hostvars'][host]['ansible_ssh_aths_hidservauth'] = hidservauth_value
                    inventory['_meta']['hostvars'][host]['ansible_ssh_aths_hidservauth_entry'] = aths_info
        except OSError:
            return self.empty_inventory()

        return inventory

    # Empty inventory for testing.
    def empty_inventory(self):
        return {'_meta': {'hostvars': {}}}

    # Read the command line args passed to the script.
    def read_cli_args(self):
        parser = argparse.ArgumentParser()
        parser.add_argument('--list', action = 'store_true')
        parser.add_argument('--host', action = 'store')
        self.args = parser.parse_args()

# Get the inventory.
ATHSInventory()
